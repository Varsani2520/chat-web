const signIn = async () => {
    try {
      await createUserWithEmailAndPassword(auth, email, password);
    } catch (err) {
      console.error(err);
    }
  };
  const signInWithGoogle = async () => {
    try {
      await signInWithPopup(auth, googleProvider);
    } catch (err) {
      console.error(err);
    }
  };
  const logOut = async () => {
    try {
      await signOut(auth);
    } catch (err) {
      console.error(err);
    }
  };







  
import { useState } from "react";
import { auth } from "../firebase";
import { logOut, signInWithEmail, signInWithGoogle } from "../authContext";
import { useDispatch } from "react-redux";
import { loginUserFailure, loginUserSuccess } from "../action/action";


export default function LoginModel() {
  const dispatch = useDispatch()
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  console.log(auth?.currentUser?.email);
  const handleGoogleSignIn = () => {
    const user = signInWithGoogle();
    dispatch(loginUserSuccess(user))
    console.log(user);

  };

  const handleEmailSignIn = (email, password) => {
    const user = signInWithEmail(email, password);
    dispatch(loginUserSuccess(user))
    console.log(user);
  };

  const handleSignOut = () => {

    const user = logOut();
    dispatch(loginUserFailure(user))
    console.log(user);

  };
  return (
    <div>
      <input placeholder="Email.." onChange={(e) => setEmail(e.target.value)} />
      <input
        type="password"
        placeholder="Password.."
        onChange={(e) => setPassword(e.target.value)}
      />
      <button onClick={handleEmailSignIn}> Signin</button>
      <button onClick={handleGoogleSignIn}> Signin with google</button>
      <button onClick={handleSignOut}> logOut</button>
    </div>
  );
}
